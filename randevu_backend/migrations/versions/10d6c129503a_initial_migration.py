"""Initial migration

Revision ID: 10d6c129503a
Revises: 
Create Date: 2025-04-16 04:48:17.719909

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '10d6c129503a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # İlk olarak iki temel tabloyu foreign key kısıtlamaları olmadan oluşturalım
    op.create_table('tenants',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('owner_id', sa.String(length=36), nullable=True), # nullable=True olarak değiştirildi
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('subscription_plan', sa.String(length=20), nullable=True),
    sa.Column('subscription_start_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('sms_settings', sa.JSON(), nullable=True),
    sa.Column('working_schedule', sa.JSON(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    # Foreign key kısıtlaması kaldırıldı
    )
    
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('SUPER_ADMIN', 'SALON_OWNER', 'HAIRDRESSER', 'CUSTOMER', name='userrole'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tenant_id', sa.String(length=36), nullable=True),
    sa.Column('profile_image', sa.String(length=255), nullable=True),
    sa.Column('salon_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    # Foreign key kısıtlamaları kaldırıldı
    )
    
    # Şimdi foreign key kısıtlamalarını ekleyelim
    op.create_foreign_key('fk_tenants_owner_id_users', 'tenants', 'users', ['owner_id'], ['id'])
    op.create_foreign_key('fk_users_tenant_id_tenants', 'users', 'tenants', ['tenant_id'], ['id'])
    op.create_foreign_key('fk_users_salon_id_tenants', 'users', 'tenants', ['salon_id'], ['id'])
    
    # Diğer tabloları oluşturalım
    op.create_table('hairdressers',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('profile_image', sa.String(length=255), nullable=True),
    sa.Column('working_schedule', sa.JSON(), nullable=True),
    sa.Column('service_ids', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('holiday_dates', sa.JSON(), nullable=True),
    sa.Column('salon_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['salon_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('services',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('salon_id', sa.String(length=36), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['salon_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('appointments',
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=False),
    sa.Column('customer_email', sa.String(length=100), nullable=True),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELED', 'NO_SHOW', name='appointmentstatus'), nullable=True),
    sa.Column('access_code', sa.String(length=8), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('confirmation_sent', sa.Boolean(), nullable=True),
    sa.Column('reminder_sent', sa.Boolean(), nullable=True),
    sa.Column('salon_id', sa.String(length=36), nullable=False),
    sa.Column('hairdresser_id', sa.String(length=36), nullable=False),
    sa.Column('service_id', sa.String(length=36), nullable=False),
    sa.Column('customer_id', sa.String(length=36), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hairdresser_id'], ['hairdressers.id'], ),
    sa.ForeignKeyConstraint(['salon_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_code')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('appointments')
    op.drop_table('services')
    op.drop_table('hairdressers')
    # Foreign key kısıtlamalarını düşürüyoruz
    op.drop_constraint('fk_users_salon_id_tenants', 'users', type_='foreignkey')
    op.drop_constraint('fk_users_tenant_id_tenants', 'users', type_='foreignkey')
    op.drop_constraint('fk_tenants_owner_id_users', 'tenants', type_='foreignkey')
    # Sonra tabloları düşürüyoruz
    op.drop_table('users')
    op.drop_table('tenants')
    # ### end Alembic commands ###
